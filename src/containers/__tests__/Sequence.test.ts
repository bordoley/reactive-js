import {
  concatAllTests,
  concatMapTests,
  concatTests,
  concatWithTests,
  distinctUntilChangedTests,
  endWithTests,
  fromReadonlyArrayTests,
  ignoreElementsTests,
  keepTests,
  mapTests,
  mapToTests,
  pairwiseTests,
  repeatTests,
  scanTests,
  skipFirstTests,
  startWithTests,
  takeFirstTests,
  takeLastTests,
  takeWhileTests,
  toEnumerableObservableTests,
  toEnumerableTests,
  toObservableTests,
  toRunnableObservableTests,
  zipTests,
  zipWithTests,
} from "../../__tests__/operators.js";
import { testModule } from "../../__tests__/testing.js";
import { SequenceLike } from "../../containers.js";
import Sequence from "../Sequence.js";

testModule(
  "Sequence",
  concatTests<SequenceLike>(Sequence),
  concatAllTests(Sequence),
  concatMapTests(Sequence),
  concatWithTests<SequenceLike>(Sequence),
  distinctUntilChangedTests(Sequence),
  endWithTests<SequenceLike>(Sequence),
  fromReadonlyArrayTests<SequenceLike>(Sequence),
  ignoreElementsTests(Sequence),
  keepTests(Sequence),
  mapTests(Sequence),
  mapToTests(Sequence),
  pairwiseTests(Sequence),
  repeatTests(Sequence),
  scanTests(Sequence),
  skipFirstTests(Sequence),
  startWithTests<SequenceLike>(Sequence),
  takeFirstTests(Sequence),
  takeLastTests(Sequence),
  toEnumerableTests<SequenceLike>(Sequence),
  toEnumerableObservableTests<SequenceLike>(Sequence),
  toObservableTests<SequenceLike>(Sequence),
  toRunnableObservableTests<SequenceLike>(Sequence),
  takeWhileTests(Sequence),
  zipTests<SequenceLike>(Sequence),
  zipWithTests<SequenceLike>(Sequence),
);
