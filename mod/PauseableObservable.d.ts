import { PauseableObservableContainer } from "./containers.js";
import { Function1 } from "./functions.js";
import { DispatcherLike, ObservableLike, PauseableObservableLike } from "./types.js";
export declare const dispatchTo: PauseableObservableContainer.TypeClass["dispatchTo"];
export declare const enqueue: PauseableObservableContainer.TypeClass["enqueue"];
export declare const forEach: PauseableObservableContainer.TypeClass["forEach"];
export declare const keep: PauseableObservableContainer.TypeClass["keep"];
export declare const map: PauseableObservableContainer.TypeClass["map"];
export declare const pick: PauseableObservableContainer.TypeClass["pick"];
export declare const sinkInto: <T>(sink: DispatcherLike<T>) => Function1<PauseableObservableLike<T>, ObservableLike<void>>;
