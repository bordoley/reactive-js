import { KeyedContainer, ReadonlyObjectMapContainer, ReadonlyObjectMapLike } from "../containers.js";
export declare const empty: KeyedContainer.Empty<ReadonlyObjectMapContainer>["empty"];
export declare const entries: KeyedContainer.Entries<ReadonlyObjectMapContainer>["entries"];
export declare const forEachWithKey: KeyedContainer.ForEachWithKey<ReadonlyObjectMapContainer>["forEachWithKey"];
export declare const keep: KeyedContainer.Keep<ReadonlyObjectMapContainer>["keep"];
export declare const keepType: KeyedContainer.KeepType<ReadonlyObjectMapContainer>["keepType"];
export declare const keepWithKey: KeyedContainer.KeepWithKey<ReadonlyObjectMapContainer>["keepWithKey"];
export declare const keys: KeyedContainer.Keys<ReadonlyObjectMapLike>["keys"];
export declare const keySet: KeyedContainer.KeySet<ReadonlyObjectMapLike>["keySet"];
export declare const map: KeyedContainer.Map<ReadonlyObjectMapContainer>["map"];
export declare const mapWithKey: KeyedContainer.MapWithKey<ReadonlyObjectMapContainer>["mapWithKey"];
export declare const reduce: KeyedContainer.Reduce<ReadonlyObjectMapContainer>["reduce"];
export declare const reduceWithKey: KeyedContainer.ReduceWithKey<ReadonlyObjectMapContainer>["reduceWithKey"];
export declare const values: KeyedContainer.Values<ReadonlyObjectMapContainer>["values"];
