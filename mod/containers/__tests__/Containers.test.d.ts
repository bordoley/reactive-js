import { Buffer, Concat, ConcatAll, ConcatMap, ConcatWith, Container, Contains, DistinctUntilChanged, Empty, EndWith, EverySatisfy, First, FlatMapIterable, ForEach, ForkConcat, ForkZip, FromEnumeratorFactory, FromFactory, FromIterable, FromOptional, FromReadonlyArray, Generate, Identity, IgnoreElements, Keep, KeepType, Last, Map, MapTo, NoneSatisfy, Pairwise, Pick, Reduce, Repeat, Scan, SkipFirst, SomeSatisfy, StartWith, TakeFirst, TakeLast, TakeWhile, ToReadonlyArray, Zip, ZipWith } from "../../containers.js";
export interface ContainerModule<C extends Container> extends Buffer<C>, Concat<C>, ConcatAll<C>, ConcatMap<C>, ConcatWith<C>, Contains<C>, DistinctUntilChanged<C>, Empty<C>, EndWith<C>, EverySatisfy<C>, First<C>, FlatMapIterable<C>, ForEach<C>, ForkConcat<C>, ForkZip<C>, FromEnumeratorFactory<C>, FromFactory<C>, FromIterable<C>, FromOptional<C>, FromReadonlyArray<C>, Generate<C>, Identity<C>, IgnoreElements<C>, Keep<C>, KeepType<C>, Last<C>, Map<C>, MapTo<C>, NoneSatisfy<C>, Pairwise<C>, Pick<C>, Reduce<C>, Repeat<C>, Scan<C>, SkipFirst<C>, SomeSatisfy<C>, StartWith<C>, TakeFirst<C>, TakeLast<C>, TakeWhile<C>, ToReadonlyArray<C>, Zip<C>, ZipWith<C> {
}
declare const Containers_test: <C extends Container>(m: ContainerModule<C>) => import("../../__internal__/testing.js").Describe;
export default Containers_test;
