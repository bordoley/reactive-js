import { Concat, DecodeWithCharset, DistinctUntilChanged, ForEach, Keep, Map, Pairwise, Reduce, Scan, SkipFirst, ConcatAll, TakeFirst, TakeLast, TakeWhile, ThrowIfEmpty } from "../containers.mjs";
import { HotObservableLike, ObservableLike } from "../rx.mjs";
declare const concatT: Concat<HotObservableLike>;
declare const decodeWithCharsetT: DecodeWithCharset<HotObservableLike>;
declare const distinctUntilChangedT: DistinctUntilChanged<HotObservableLike>;
declare const forEachT: ForEach<HotObservableLike>;
declare const keepT: Keep<HotObservableLike>;
declare const mapT: Map<HotObservableLike>;
declare const mergeT: Concat<HotObservableLike<unknown>>;
declare const pairwiseT: Pairwise<HotObservableLike>;
declare const reduceT: Reduce<HotObservableLike>;
declare const scanT: Scan<HotObservableLike>;
declare const skipFirstT: SkipFirst<HotObservableLike>;
declare const switchAllT: ConcatAll<ObservableLike>;
declare const takeFirstT: TakeFirst<HotObservableLike>;
declare const takeLastT: TakeLast<HotObservableLike>;
declare const takeWhileT: TakeWhile<HotObservableLike>;
declare const throwIfEmptyT: ThrowIfEmpty<HotObservableLike>;
export { concatT, decodeWithCharsetT, distinctUntilChangedT, forEachT, keepT, mapT, mergeT, pairwiseT, reduceT, scanT, skipFirstT, switchAllT, takeFirstT, takeLastT, takeWhileT, throwIfEmptyT };
