import { Container } from "../../core.js";
export interface ContainerModule<C extends Container> extends Container.Buffer<C>, Container.Concat<C>, Container.ConcatAll<C>, Container.ConcatMap<C>, Container.ConcatWith<C>, Container.Contains<C>, Container.DistinctUntilChanged<C>, Container.Empty<C>, Container.EndWith<C>, Container.EverySatisfy<C>, Container.First<C>, Container.FlatMapIterable<C>, Container.ForEach<C>, Container.ForkConcat<C>, Container.ForkZip<C>, Container.FromEnumeratorFactory<C>, Container.FromFactory<C>, Container.FromIterable<C>, Container.FromOptional<C>, Container.FromReadonlyArray<C>, Container.Generate<C>, Container.Identity<C>, Container.IgnoreElements<C>, Container.Keep<C>, Container.KeepType<C>, Container.Last<C>, Container.Map<C>, Container.MapTo<C>, Container.NoneSatisfy<C>, Container.Pairwise<C>, Container.Pick<C>, Container.Reduce<C>, Container.Repeat<C>, Container.Scan<C>, Container.SkipFirst<C>, Container.SomeSatisfy<C>, Container.StartWith<C>, Container.TakeFirst<C>, Container.TakeLast<C>, Container.TakeWhile<C>, Container.ToReadonlyArray<C>, Container.Zip<C>, Container.ZipWith<C> {
}
declare const Containers_test: <C extends Container>(m: ContainerModule<C>) => import("../../__internal__/testing.js").Describe;
export default Containers_test;
