import { KeyedContainer, ReadonlyObjectMapContainer, ReadonlyObjectMapLike } from "../core.js";
export declare const empty: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["empty"];
export declare const entries: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["entries"];
export declare const forEachWithKey: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["forEachWithKey"];
export declare const keep: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["keep"];
export declare const keepType: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["keepType"];
export declare const keepWithKey: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["keepWithKey"];
export declare const keys: KeyedContainer.TypeClass<ReadonlyObjectMapLike>["keys"];
export declare const keySet: KeyedContainer.TypeClass<ReadonlyObjectMapLike>["keySet"];
export declare const map: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["map"];
export declare const mapWithKey: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["mapWithKey"];
export declare const reduce: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["reduce"];
export declare const reduceWithKey: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["reduceWithKey"];
export declare const values: KeyedContainer.TypeClass<ReadonlyObjectMapContainer>["values"];
