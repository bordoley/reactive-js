/** @type {unique symbol} */
export const MutableEnumeratorLike_reset: unique symbol;
/** @type {unique symbol} */
export const Enumerator_private_current: unique symbol;
/** @type {unique symbol} */
export const ReadonlyArrayEnumerator_values: unique symbol;
/** @type {unique symbol} */
export const ReadonlyArrayEnumerator_index: unique symbol;
/** @type {unique symbol} */
export const ReadonlyArrayEnumerator_count: unique symbol;
/** @type {unique symbol} */
export const NODE_JS_PAUSE_EVENT: unique symbol;
/** @type {unique symbol} */
export const WindowLocationStreamLike_goBack: unique symbol;
/** @type {unique symbol} */
export const WindowLocationStreamLike_canGoBack: unique symbol;
/** @type {unique symbol} */
export const WindowLocationStream_historyCounter: unique symbol;
/** @type {unique symbol} */
export const WindowLocationStreamLike_replace: unique symbol;
/** @type {unique symbol} */
export const EnumerableEnumerator_continuationQueue: unique symbol;
/** @type {unique symbol} */
export const MergeAllObserver_activeCount: unique symbol;
/** @type {unique symbol} */
export const MergeAllObserver_maxBufferSize: unique symbol;
/** @type {unique symbol} */
export const MergeAllObserver_maxConcurrency: unique symbol;
/** @type {unique symbol} */
export const MergeAllObserver_onDispose: unique symbol;
/** @type {unique symbol} */
export const MergeAllObserver_observablesQueue: unique symbol;
/** @type {unique symbol} */
export const HigherOrderObservable_currentRef: unique symbol;
/** @type {unique symbol} */
export const ThrottleObserver_value: unique symbol;
/** @type {unique symbol} */
export const ThrottleObserver_hasValue: unique symbol;
/** @type {unique symbol} */
export const ThrottleObserver_durationSubscription: unique symbol;
/** @type {unique symbol} */
export const ThrottleObserver_durationFunction: unique symbol;
/** @type {unique symbol} */
export const ThrottleObserver_mode: unique symbol;
/** @type {unique symbol} */
export const ThrottleObserver_onNotify: unique symbol;
/** @type {unique symbol} */
export const BufferObserver_buffer: unique symbol;
/** @type {unique symbol} */
export const BufferObserver_durationFunction: unique symbol;
/** @type {unique symbol} */
export const BufferObserver_durationSubscription: unique symbol;
/** @type {unique symbol} */
export const BufferObserver_count: unique symbol;
/** @type {unique symbol} */
export const ComputeEffect_type: unique symbol;
/** @type {unique symbol} */
export const MemoOrUsingEffect_func: unique symbol;
/** @type {unique symbol} */
export const MemoOrUsingEffect_args: unique symbol;
/** @type {unique symbol} */
export const MemoOrUsingEffect_value: unique symbol;
/** @type {unique symbol} */
export const AwaitOrObserveEffect_observable: unique symbol;
/** @type {unique symbol} */
export const AwaitOrObserveEffect_subscription: unique symbol;
/** @type {unique symbol} */
export const AwaitOrObserveEffect_value: unique symbol;
/** @type {unique symbol} */
export const AwaitOrObserveEffect_hasValue: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_index: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_cleanup: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_effects: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_mode: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_observer: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_runComputation: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_scheduledComputationSubscription: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_awaitOrObserve: unique symbol;
/** @type {unique symbol} */
export const ComputeContext_memoOrUse: unique symbol;
/** @type {unique symbol} */
export const CreateObservable_effect: unique symbol;
/** @type {unique symbol} */
export const DecodeWithCharsetObserver_textDecoder: unique symbol;
/** @type {unique symbol} */
export const DistinctUntilChangedObserver_equality: unique symbol;
/** @type {unique symbol} */
export const DistinctUntilChangedObserver_prev: unique symbol;
/** @type {unique symbol} */
export const DistinctUntilChangedObserver_hasValue: unique symbol;
/** @type {unique symbol} */
export const EnqueueObserver_effect: unique symbol;
/** @type {unique symbol} */
export const KeepObserver_predicate: unique symbol;
/** @type {unique symbol} */
export const LatestCtx_delegate: unique symbol;
/** @type {unique symbol} */
export const LatestCtx_mode: unique symbol;
/** @type {unique symbol} */
export const LatestCtx_completedCount: unique symbol;
/** @type {unique symbol} */
export const LatestCtx_observers: unique symbol;
/** @type {unique symbol} */
export const LatestObserver_ready: unique symbol;
/** @type {unique symbol} */
export const LatestObserver_latest: unique symbol;
/** @type {unique symbol} */
export const LatestObserver_ctx: unique symbol;
/** @type {unique symbol} */
export const LiftedObservable_source: unique symbol;
/** @type {unique symbol} */
export const LiftedObservable_operators: unique symbol;
/** @type {unique symbol} */
export const MapObserver_mapper: unique symbol;
/** @type {unique symbol} */
export const MergeObserverCtx_completedCount: unique symbol;
/** @type {unique symbol} */
export const PairwiseObserver_prev: unique symbol;
/** @type {unique symbol} */
export const PairwiseObserver_hasPrev: unique symbol;
/** @type {unique symbol} */
export const ReduceObserver_reducer: unique symbol;
/** @type {unique symbol} */
export const ReduceObserver_acc: unique symbol;
/** @type {unique symbol} */
export const ScanObserver_reducer: unique symbol;
/** @type {unique symbol} */
export const ScanObserver_acc: unique symbol;
/** @type {unique symbol} */
export const SkipFirstObserver_skipCount: unique symbol;
/** @type {unique symbol} */
export const SkipFirstObserver_count: unique symbol;
/** @type {unique symbol} */
export const TakeFirstObserver_takeCount: unique symbol;
/** @type {unique symbol} */
export const TakeFirstObserver_count: unique symbol;
/** @type {unique symbol} */
export const TakeLastObserver_takeLastQueue: unique symbol;
/** @type {unique symbol} */
export const TakeWhileObserver_predicate: unique symbol;
/** @type {unique symbol} */
export const TakeWhileObserver_inclusive: unique symbol;
/** @type {unique symbol} */
export const ThrowIfEmptyObserver_isEmpty: unique symbol;
/** @type {unique symbol} */
export const timeoutError: unique symbol;
/** @type {unique symbol} */
export const TimeoutObserver_duration: unique symbol;
/** @type {unique symbol} */
export const WithLatestFromObserver_hasLatest: unique symbol;
/** @type {unique symbol} */
export const WithLatestFromObserver_otherLatest: unique symbol;
/** @type {unique symbol} */
export const WithLatestFromObserver_selector: unique symbol;
/** @type {unique symbol} */
export const ZipObserver_enumerators: unique symbol;
/** @type {unique symbol} */
export const ZipObserver_queuedEnumerator: unique symbol;
/** @type {unique symbol} */
export const ZipWithLatestFromObserver_hasLatest: unique symbol;
/** @type {unique symbol} */
export const ZipWithLatestFromObserver_otherLatest: unique symbol;
/** @type {unique symbol} */
export const ZipWithLatestFromObserver_selector: unique symbol;
/** @type {unique symbol} */
export const ZipWithLatestFromObserver_TAQueue: unique symbol;
/** @type {unique symbol} */
export const ObserverMixin_continuation: unique symbol;
/** @type {unique symbol} */
export const ObserverMixin_isCompleted: unique symbol;
/** @type {unique symbol} */
export const ObserverMixin_dispatchSubscription: unique symbol;
/** @type {unique symbol} */
export const SatisfyObserver_predicate: unique symbol;
/** @type {unique symbol} */
export const Subject_observers: unique symbol;
/** @type {unique symbol} */
export const ContinuationSchedulerLike_schedule: unique symbol;
/** @type {unique symbol} */
export const ContinuationSchedulerLike_shouldYield: unique symbol;
/** @type {unique symbol} */
export const ContinuationLike_run: unique symbol;
/** @type {unique symbol} */
export const ContinuationLike_priority: unique symbol;
/** @type {unique symbol} */
export const ContinuationLike_continuationScheduler: unique symbol;
/** @type {unique symbol} */
export const PrioritySchedulerImplementationLike_runContinuation: unique symbol;
/** @type {unique symbol} */
export const PrioritySchedulerImplementationLike_shouldYield: unique symbol;
/** @type {unique symbol} */
export const Continuation_childContinuation: unique symbol;
/** @type {unique symbol} */
export const Continuation_effect: unique symbol;
/** @type {unique symbol} */
export const SchedulerMixin_yieldRequested: unique symbol;
/** @type {unique symbol} */
export const SchedulerMixin_currentContinuation: unique symbol;
/** @type {unique symbol} */
export const SchedulerMixin_startTime: unique symbol;
/** @type {unique symbol} */
export const PrioritySchedulerDelegatingScheduler_priorityScheduler: unique symbol;
/** @type {unique symbol} */
export const PrioritySchedulerDelegatingScheduler_priority: unique symbol;
/** @type {unique symbol} */
export const VirtualTask_continuation: unique symbol;
/** @type {unique symbol} */
export const VirtualTask_dueTime: unique symbol;
/** @type {unique symbol} */
export const VirtualTask_id: unique symbol;
/** @type {unique symbol} */
export const VirtualTimeScheduler_maxMicroTaskTicks: unique symbol;
/** @type {unique symbol} */
export const VirtualTimeScheduler_microTaskTicks: unique symbol;
/** @type {unique symbol} */
export const VirtualTimeScheduler_taskIDCount: unique symbol;
/** @type {unique symbol} */
export const QueueTask_continuation: unique symbol;
/** @type {unique symbol} */
export const QueueTask_dueTime: unique symbol;
/** @type {unique symbol} */
export const QueueTask_priority: unique symbol;
/** @type {unique symbol} */
export const QueueTask_taskID: unique symbol;
/** @type {unique symbol} */
export const QueueScheduler_delayed: unique symbol;
/** @type {unique symbol} */
export const QueueScheduler_dueTime: unique symbol;
/** @type {unique symbol} */
export const QueueScheduler_hostContinuation: unique symbol;
/** @type {unique symbol} */
export const QueueScheduler_hostScheduler: unique symbol;
/** @type {unique symbol} */
export const QueueScheduler_queue: unique symbol;
/** @type {unique symbol} */
export const QueueScheduler_taskIDCounter: unique symbol;
/** @type {unique symbol} */
export const LiftedAsyncEnumerable_src: unique symbol;
/** @type {unique symbol} */
export const LiftedAsyncEnumerable_operators: unique symbol;
/** @type {unique symbol} */
export const AsyncEnumeratorDelegatingMixin_src: unique symbol;
/** @type {unique symbol} */
export const DispatchedObservable_observer: unique symbol;
/** @type {unique symbol} */
export const StreamMixin_dispatcher: unique symbol;
/** @type {unique symbol} */
export const DisposableMixin_disposables: unique symbol;
/** @type {unique symbol} */
export const SerialDisposableMixin_current: unique symbol;
/** @type {unique symbol} */
export const FifoQueue_head: unique symbol;
/** @type {unique symbol} */
export const FifoQueue_tail: unique symbol;
/** @type {unique symbol} */
export const FifoQueue_capacityMask: unique symbol;
/** @type {unique symbol} */
export const FifoQueue_values: unique symbol;
/** @type {unique symbol} */
export const PriorityQueueImpl_comparator: unique symbol;
/** @type {unique symbol} */
export const ContainerLike_T: unique symbol;
/** @type {unique symbol} */
export const ContainerLike_type: unique symbol;
/** @type {unique symbol} */
export const EnumeratorLike_move: unique symbol;
/** @type {unique symbol} */
export const EnumeratorLike_current: unique symbol;
/** @type {unique symbol} */
export const EnumeratorLike_hasCurrent: unique symbol;
/** @type {unique symbol} */
export const Object_init: unique symbol;
/** @type {unique symbol} */
export const Object_properties: unique symbol;
/** @type {unique symbol} */
export const Object_prototype: unique symbol;
/** @type {unique symbol} */
export const Object_private_initializedProperties: unique symbol;
/** @type {unique symbol} */
export const DelegatingLike_delegate: unique symbol;
/** @type {unique symbol} */
export const DispatcherLike_complete: unique symbol;
/** @type {unique symbol} */
export const DispatcherLike_scheduler: unique symbol;
/** @type {unique symbol} */
export const MulticastObservableLike_observerCount: unique symbol;
/** @type {unique symbol} */
export const ObserverLike_notify: unique symbol;
/** @type {unique symbol} */
export const ObservableLike_observe: unique symbol;
/** @type {unique symbol} */
export const ObservableLike_isEnumerable: unique symbol;
/** @type {unique symbol} */
export const ObservableLike_isRunnable: unique symbol;
/** @type {unique symbol} */
export const SubjectLike_publish: unique symbol;
/** @type {unique symbol} */
export const SchedulerLike_inContinuation: unique symbol;
/** @type {unique symbol} */
export const SchedulerLike_now: unique symbol;
/** @type {unique symbol} */
export const SchedulerLike_requestYield: unique symbol;
/** @type {unique symbol} */
export const SchedulerLike_shouldYield: unique symbol;
/** @type {unique symbol} */
export const SchedulerLike_schedule: unique symbol;
/** @type {unique symbol} */
export const SchedulerLike_maxYieldInterval: unique symbol;
/** @type {unique symbol} */
export const ContinuationContextLike_yield: unique symbol;
/** @type {unique symbol} */
export const PauseableSchedulerLike_isPaused: unique symbol;
/** @type {unique symbol} */
export const PauseableSchedulerLike_pause: unique symbol;
/** @type {unique symbol} */
export const PauseableSchedulerLike_resume: unique symbol;
/** @type {unique symbol} */
export const VirtualTimeSchedulerLike_run: unique symbol;
/** @type {unique symbol} */
export const StreamableLike_stream: unique symbol;
/** @type {unique symbol} */
export const StreamableLike_isEnumerable: unique symbol;
/** @type {unique symbol} */
export const StreamableLike_isInteractive: unique symbol;
/** @type {unique symbol} */
export const StreamableLike_isRunnable: unique symbol;
/** @type {unique symbol} */
export const FlowableStreamLike_isPaused: unique symbol;
/** @type {unique symbol} */
export const FlowableStreamLike_pause: unique symbol;
/** @type {unique symbol} */
export const FlowableStreamLike_resume: unique symbol;
/** @type {unique symbol} */
export const DisposableLike_add: unique symbol;
/** @type {unique symbol} */
export const DisposableLike_dispose: unique symbol;
/** @type {unique symbol} */
export const DisposableLike_error: unique symbol;
/** @type {unique symbol} */
export const DisposableLike_isDisposed: unique symbol;
/** @type {unique symbol} */
export const QueueableLike_enqueue: unique symbol;
/** @type {unique symbol} */
export const QueueableLike_capacity: unique symbol;
/** @type {unique symbol} */
export const SerialDisposableLike_current: unique symbol;
/** @type {unique symbol} */
export const QueueLike_head: unique symbol;
/** @type {unique symbol} */
export const QueueLike_dequeue: unique symbol;
/** @type {unique symbol} */
export const QueueLike_count: unique symbol;
/** @type {unique symbol} */
export const IndexedLike_get: unique symbol;
/** @type {unique symbol} */
export const IndexedLike_set: unique symbol;
/** @type {unique symbol} */
export const StackLike_pop: unique symbol;
/** @type {unique symbol} */
export const StackLike_head: unique symbol;
/** @type {unique symbol} */
export const IteratorEnumerator_iterator: unique symbol;
/** @type {unique symbol} */
export const WithCurrentTimeObserver_selector: unique symbol;
